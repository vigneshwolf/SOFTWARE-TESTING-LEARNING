                                                   SOFTWARE TESTING LEARNING.

Lets us discuss about why do we need testing?

For any given project, the objectives of testing may include:
· To prevent defects by evaluate work products such as requirements, user stories, design, and
code
· To verify whether all specified requirements have been fulfilled
· To check whether the test object is complete and validate if it works as the users and other
stakeholders expect
· To build confidence in the level of quality of the test object
· To find defects and failures thus reduce the level of risk of inadequate software quality
· To provide sufficient information to stakeholders to allow them to make informed decisions,
especially regarding the level of quality of the test object
· To comply with contractual, legal, or regulatory requirements or standards, and/or to verify the
test object
compliance with such requirements or standard

There are seven Testing principles:

1) Testing shows the presence of Defects, not their absence

Testing can show that defects are present, but cannot prove that there are no defects.

2) Exhaustive testing is impossible

Testing everything (all combinations of inputs and preconditions) is not feasible except for trivial cases.

3)Early testing saves time and money

To find defects early, both static and dynamic test activities should be started as early as possible in the
software development lifecycle.

4)Defects cluster together

A small number of modules usually contains most of the defects discovered during pre-release testing, or
is responsible for most of the operational failures

5)Beware of pesticide paradox

If the same tests are repeated over and over again, eventually these tests no longer find any new defects.
To detect new defects, existing tests and test data may need changing, and new tests may need to be
written. (Tests are no longer effective at finding defects, just as pesticides are no longer effective at killing
insects after a while.) In some cases, such as automated regression testing, the pesticide paradox has a
beneficial outcome, which is the relatively low number of regression defects.

6)Testing is context dependent

Testing is done differently in different contexts. For example, safety-critical industrial control software is
tested differently from an e-commerce mobile app.

7)Absence-of-errors is a fallacy

Some organizations expect that testers can run all possible tests and find all possible defects, but
principles 2 and 1, respectively, tell us that this is impossible. Further, it is a fallacy (i.e., a mistaken belief)
to expect that just finding and fixing a large number of defects will ensure the success of a system.

Browser comptablity testing.

So The website should open on all browser. To conform weather the websit is working on all browsers for testing is call browser compatablity testing.

what is navigation testing.

navigation testing is checking weather all links are working properly or not.

What is Funcnality testing.

Funcnality testing is testing weather all functions are working or not.

What is usablity testing.

Usablity testing is known as easy to use website or functions. it is called as funcnality testing.

we can test the websit using w3c linkchecker 